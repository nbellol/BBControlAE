{"version":3,"sources":["components/Empleados.js","components/Reservas.js","components/Promos.js","components/Customers.js","components/Orders.js","App.js","serviceWorker.js","index.js","components/images/LOGO.jpg"],"names":["Empleados","props","useState","nombres","setNombres","ordenes","setOrdenes","ganacias","setGanacias","activos","setActivos","useEffect","fetch","then","res","json","data","type","x","y","transforms","target","order","layout","margin","l","width","height","title","xaxis","orientation","Reservas","preferences","setPreferences","averagepref","setAvergaPref","dates","setDates","datecant","setDateCant","dateper","setDatePers","dateaveper","setDateAvePers","duration","setDuration","mode","x0","Promos","setPrices","values","labels","Customers","limits","setLimits","amounts","setLimitsAmount","ages","setAges","Orders","active","setActives","days","setDays","items","setItems","cant","setCant","profit","setProfit","beers","setBeers","glass","setGlass","pint","setPint","jar","setJar","tower","setTower","liters","setLiters","non","setNon","bac","setBac","mac","setMac","lag","setLag","can","setCan","cha","setCha","mon","setMon","sep","setSep","caj","setCaj","name","barmode","App","className","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7660e772.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\n\n\nconst Empleados = (props) => {\n  const [nombres, setNombres] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [ganacias, setGanacias] = useState([]);\n  const [activos, setActivos] = useState([]);\n\n  useEffect(() => {\n    fetch(\"./nombresEmpleados\")\n      .then((res) => res.json())\n      .then((res) => {\n        setNombres(res);\n      });\n    fetch(\"./orderesEmpleados\")\n      .then((res) => res.json())\n      .then((res) => {\n        setOrdenes(res);\n      });\n    fetch(\"./gananciasEmpleados\")\n      .then((res) => res.json())\n      .then((res) => {\n        setGanacias(res);\n      });\n    fetch(\"./empleadosActivos\")\n      .then((res) => res.json())\n      .then((res) => {\n        setActivos(res);\n      });\n  }, []);\n  /*function printEmpleados() {\n    if (empleados.length != 0) {\n      return <h1>{empleados[0].firstName}</h1>;\n    }\n  }\n  <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: { color: \"red\" },\n          },\n          { type: \"bar\", x: { nombres }, y: [2, 5, 3, 4, 3, 6] },\n        ]}\n        layout={{ width: 320, height: 240, title: \"A Fancy Plot\" }}\n      />\n  */\n  return (\n    <div>\n    <h2>BBC Employees Graphs</h2>\n    <div>\n    <br></br>\n      <h3>Which is the waiter that services more orderes in a week?</h3>\n      <Plot\n        data={[\n          {\n            type: \"bar\",\n            x: nombres,\n            y: ordenes,\n            transforms: [\n              {\n                type: \"sort\",\n                target: \"x\",\n                order: \"descending\",\n              },\n            ],\n          },\n        ]}\n        layout={{\n          margin: { l: 120 },\n          width: 600,\n          height: 600,\n          title: \"Quantity of orders per waiter\",\n          xaxis: { title: \"Waiters\" },\n        }}\n      />\n    </div>\n    <div>\n    <br></br>\n      <h3>Which is the waiter that bring more profits in a week?</h3>\n      <Plot\n        data={[\n          {\n            type: \"bar\",\n            x: nombres,\n            y: ganacias,\n            transforms: [\n              {\n                type: \"sort\",\n                target: \"x\",\n                order: \"descending\",\n              },\n            ],\n          },\n        ]}\n        layout={{\n          margin: { l: 120 },\n          width: 600,\n          height: 600,\n          title: \"Profit per Waiter\",\n          xaxis: { title: \"Waiters\" },\n        }}\n      />\n    </div>\n    <div>\n    <br></br>\n      <h3>How many waiters are active in the ongoing Shift?</h3>\n      <Plot\n        data={[\n          {\n            type: \"bar\",\n            x: activos,\n            y: ['Active', 'Inactive'],\n            orientation:\"h\",\n            transforms: [\n              {\n                type: \"sort\",\n                target: \"x\",\n                order: \"descending\",\n              },\n            ],\n          },\n        ]}\n        layout={{\n          margin: { l: 120 },\n          width: 600,\n          height: 600,\n          title: \"Active waiters\",\n          xaxis: { title: \"Number of active waiters\" },\n        }}\n      />\n    </div>\n    </div>\n  );\n};\nexport default Empleados;\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst Reservas = (props) => {\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [averagepref, setAvergaPref] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [datecant, setDateCant] = useState([]);\r\n    const [dateper, setDatePers] = useState([]);\r\n    const [dateaveper, setDateAvePers] = useState([]);\r\n    const [duration, setDuration] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"./reservasPreferences\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setPreferences(res)});\r\n        fetch(\"./reservasPrefQuantity\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setAvergaPref(res)});\r\n        fetch(\"./reservasDate\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDates(res)});\r\n        fetch(\"./reservasCant\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDateCant(res)});\r\n        fetch(\"./reservasPersons\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDatePers(res)});\r\n        fetch(\"./reservasAveragePersons\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDateAvePers(res)});\r\n        fetch(\"./reservasDuration\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDuration(res)});\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n        <h2>BBC Reservation Graphs</h2>\r\n        <div>\r\n        <br></br>\r\n          <h3>Which reservation preferences is the most used?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: \"bar\",\r\n              x: ['near arcade','near bar','near tv'],\r\n              y: preferences,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"descending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"Quantity of the prefrences\",\r\n            xaxis: { title: \"Preferences\" },\r\n          }}\r\n          />\r\n        </div>\r\n        <div>\r\n        <h3>What is the average probability of having 1,2, or 3 preferences?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: \"bar\",\r\n              x: [1,2,3],\r\n              y: averagepref,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"descending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"Average probability of each preferences\",\r\n            xaxis: { title: \"Preferences\" },\r\n          }}\r\n          />\r\n        </div>\r\n        <div>\r\n        <h3>What is the maximun number of Reservations per day?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: 'scatter',\r\n              mode: 'lines+points',\r\n              x: dates,\r\n              y: datecant,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"ascending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"Reservation per Day\",\r\n            xaxis: { title: \"Dates\" },\r\n          }}\r\n          />\r\n        </div>\r\n        <div>\r\n        <h3>What is the maximum number of people that reserve per day?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: 'scatter',\r\n              mode: 'lines+points',\r\n              x: dates,\r\n              y: dateper,\r\n              x0: 0,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"ascending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"Number of people that Reserve per Day\",\r\n            xaxis: { \r\n              title: \"Dates\",\r\n               },\r\n          }}\r\n          />\r\n        </div>\r\n        <div>\r\n        <h3>What is the average Number of people per reservation per day?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: 'scatter',\r\n              mode: 'lines+points',\r\n              x: dates,\r\n              y: dateaveper,\r\n              x0: 0,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"ascending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"Number of people per Reservation per Day\",\r\n            xaxis: { \r\n              title: \"Dates\",\r\n               },\r\n          }}\r\n          />\r\n        </div>\r\n        <div>\r\n        <h3>What is the average duration of a reservation per day?</h3>\r\n            <Plot\r\n            data={[\r\n             {\r\n              type: 'scatter',\r\n              mode: 'lines+points',\r\n              x: dates,\r\n              y: duration,\r\n              x0: 0,\r\n              transforms: [\r\n                {\r\n                  type: \"sort\",\r\n                  target: \"x\",\r\n                  order: \"ascending\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          layout={{\r\n            margin: { l: 120 },\r\n            width: 600,\r\n            height: 600,\r\n            title: \"average Duration of a Reservation per Day\",\r\n            xaxis: { \r\n              title: \"Dates\",\r\n               },\r\n          }}\r\n          />\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Reservas;","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst Promos = (props) => {\r\n\r\n    const [activos, setActivos] = useState([]);\r\n    const [nombres, setNombres] = useState([]);\r\n    const [prices, setPrices] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"./activePromos\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setActivos(res);\r\n        });\r\n        fetch(\"./pricePromos\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setPrices(res);\r\n        });\r\n        fetch(\"./namePromos\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setNombres(res);\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n    <div>\r\n        <h2>BBC Promotions Graphs</h2>\r\n        <div>\r\n        <h3> What percentage of the promotions is active during the shift? </h3>\r\n        <Plot\r\n        data={[\r\n            {\r\n                values: activos,\r\n                labels: ['Activos', 'Inactivos'],\r\n                type: 'pie'  \r\n            }\r\n        ]}\r\n        layout={{\r\n          margin: { l: 120 },\r\n          width: 600,\r\n          height: 600,\r\n          title: \"Active Promotions\",\r\n        }}\r\n         />\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Promos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst Customers = (props) => {\r\n\r\n    const [limits, setLimits] = useState([]);\r\n    const [amounts, setLimitsAmount] = useState([]);\r\n    const [ages, setAges] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"./limitCustomers\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setLimits(res);\r\n        });\r\n        fetch(\"./limitAmountCustomers\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setLimitsAmount(res);\r\n        });\r\n        fetch(\"./ageCustomers\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setAges(res);\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n    <div>\r\n        <h2>BBC Customers Graphs</h2>\r\n        <div>\r\n        <h3>What are the expenses Limits set by the users?</h3>\r\n        <Plot\r\n        data={[\r\n          {\r\n            type: \"bar\",\r\n            x: limits,\r\n            y: amounts,\r\n           \r\n          },\r\n        ]}\r\n        layout={{\r\n          margin: { l: 120 },\r\n          width: 600,\r\n          height: 600,\r\n          title: \"Limits Amounts of the users\",\r\n          xaxis: { title: \"Limits\" },\r\n        }}\r\n      />\r\n        </div>\r\n        <div>\r\n        <h3>How many users are in each age ranges?</h3>\r\n        <Plot\r\n        data={[\r\n          {\r\n            type: \"bar\",\r\n            x: ['18 - 24','25 - 34','35 - 45','45+'],\r\n            y: ages,\r\n           \r\n          },\r\n        ]}\r\n        layout={{\r\n          margin: { l: 120 },\r\n          width: 600,\r\n          height: 600,\r\n          title: \"User age categories\",\r\n          xaxis: { title: \"Ages Categories\" },\r\n        }}\r\n      />\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Customers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst Orders = (props) => {\r\n\r\n    const [active, setActives] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [cant, setCant] = useState([]);\r\n    const [profit, setProfit] = useState([]);\r\n    const [beers, setBeers] = useState([]);\r\n    const [glass, setGlass] = useState([]);\r\n    const [pint, setPint] = useState([]);\r\n    const [jar, setJar] = useState([]);\r\n    const [tower, setTower] = useState([]);\r\n    const [liters, setLiters] = useState([]);\r\n    const [non, setNon] = useState([]);\r\n    const [bac, setBac] = useState([]);\r\n    const [mac, setMac] = useState([]);\r\n    const [lag, setLag] = useState([]);\r\n    const [can, setCan] = useState([]);\r\n    const [cha, setCha] = useState([]);\r\n    const [mon, setMon] = useState([]);\r\n    const [sep, setSep] = useState([]);\r\n    const [caj, setCaj] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        fetch(\"./activeOrders\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setActives(res);\r\n        });\r\n        fetch(\"./dayOrders\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setDays(res);\r\n        });\r\n        fetch(\"./itemsOrders\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setItems(res);\r\n        });\r\n        fetch(\"./cantOrders\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setCant(res);\r\n        });\r\n        fetch(\"./profitOrders\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setProfit(res);\r\n        });\r\n        fetch(\"./Beers\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setBeers(res);\r\n        });\r\n        fetch(\"./BeersGlass\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setGlass(res);\r\n        });\r\n        fetch(\"./BeersPint\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setPint(res);\r\n        });\r\n        fetch(\"./BeersJar\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setJar(res);\r\n        });\r\n        fetch(\"./BeersTower\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setTower(res);\r\n        });\r\n        fetch(\"./beersDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setLiters(res);\r\n        });\r\n        fetch(\"./nonAlcoholic\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setNon(res);\r\n        });\r\n        fetch(\"./bacataDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setBac(res);\r\n        });\r\n        fetch(\"./macondoDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setMac(res);\r\n        });\r\n        fetch(\"./lagerDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setLag(res);\r\n        });\r\n        fetch(\"./candelariaDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setCan(res);\r\n        });\r\n        fetch(\"./chapineroDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setCha(res);\r\n        });\r\n        fetch(\"./monserrateDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setMon(res);\r\n        });\r\n        fetch(\"./septimazoDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setSep(res);\r\n        });\r\n        fetch(\"./cajicaDay\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n          setCaj(res);\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h2>BBC Orders Graphs</h2>\r\n            <div>\r\n            <h3>Which percentage of the orders are Completed in the shift?</h3>\r\n            <Plot\r\n            data={[\r\n            {\r\n                values: active,\r\n                labels: ['In Progress', 'Completed'],\r\n                type: 'pie'  \r\n            }\r\n            ]}\r\n            layout={{\r\n              margin: { l: 120 },\r\n              width: 600,\r\n              height: 600,\r\n              title: \"Active Orders\",\r\n             }}\r\n            />\r\n            </div>\r\n            <div>\r\n            <h3>How many orders are placed each day of the week?</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: days,\r\n           \r\n                  },\r\n                ]}\r\n                layout={{\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Orders per day\",\r\n                  xaxis: { title: \"Days of the week\" },\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>How many orders of each item in the menu in a week</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: items,\r\n                    y: cant,\r\n           \r\n                  },\r\n                ]}\r\n                layout={{\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Quantity per item\",\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>How much profit is earned by each item per week</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: items,\r\n                    y: profit,\r\n           \r\n                  },\r\n                ]}\r\n                layout={{\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Profit per item\",\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>How much profit is earned by each beer per week</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: beers,\r\n                    y: glass,\r\n                    name:\"Glass\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: beers,\r\n                    y: pint,\r\n                    name:\"Pint\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: beers,\r\n                    y: jar,\r\n                    name:\"Jar\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: beers,\r\n                    y: tower,\r\n                    name:\"Tower\"\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  barmode: 'stack',\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Profit per item\",\r\n                  xaxis: { title: \"Beers\" },\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>How many Liters are sold in beer per day?</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: liters,\r\n           \r\n                  },\r\n                ]}\r\n                layout={{\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Liters sold per day\",\r\n                  xaxis: { title: \"Days of the week\" },\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>Which non Alcoholic drink is the favorite?</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Capuccion','Coke','Americano','Classic Lemonade','Latte','Machiatto','Mirenal Water'],\r\n                    y: non,\r\n           \r\n                  },\r\n                ]}\r\n                layout={{\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Liters sold per day\",\r\n                  xaxis: { title: \"Days of the week\" },\r\n                }}\r\n             />\r\n            </div>\r\n            <div>\r\n            <h3>Which beer sells more Liters per day of the week?</h3>\r\n            <Plot\r\n                data={[\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: bac,\r\n                    name:\"Bacata\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: mac,\r\n                    name:\"Macondo\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: lag,\r\n                    name:\"Lager\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: can,\r\n                    name:\"Candelaria\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: cha,\r\n                    name:\"Chapinero\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: mon,\r\n                    name:\"Monserrate\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: sep,\r\n                    name:\"Septimazo\"\r\n                  },\r\n                  {\r\n                    type: \"bar\",\r\n                    x: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                    y: caj,\r\n                    name:\"Cajica\"\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  barmode: 'group',\r\n                  margin: { l: 120 },\r\n                  width: 600,\r\n                  height: 600,\r\n                  title: \"Liters sold per day\",\r\n                  xaxis: { title: \"Days of the week\" },\r\n                }}\r\n             />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Orders;","import React, { useState, useEffect } from \"react\";\nimport logo from './components/images/LOGO.jpg';\n\nimport \"./App.css\";\nimport Empleados from \"./components/Empleados\";\nimport Reservas from \"./components/Reservas\";\nimport Promos from \"./components/Promos\";\nimport Customer from \"./components/Customers\";\nimport Orders from \"./components/Orders\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>BBControl Analytics Engine</h1>\n      <img src={logo} alt=\"Logo\" height=\"250\"/>\n      <Empleados></Empleados>\n      <Reservas></Reservas>\n      <Promos></Promos>\n      <Customer></Customer>\n      <Orders></Orders>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.49eff9f9.jpg\";"],"sourceRoot":""}